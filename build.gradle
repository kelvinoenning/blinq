
plugins {
    // Apply the Kotlin JVM plugin to add support for Kotlin.
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
}

repositories {
    // Use jcenter for resolving dependencies.
    jcenter()
}

dependencies {
    // Align versions of all Kotlin components
    implementation platform('org.jetbrains.kotlin:kotlin-bom')

    // Use the Kotlin JDK 8 standard library.
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.61'

    // Apache Beam    
    implementation("org.apache.beam:beam-sdks-java-core:2.16.0")
    implementation("org.apache.beam:beam-runners-direct-java:2.16.0")
    implementation("org.apache.beam:beam-runners-google-cloud-dataflow-java:2.16.0")

    // Google Cloud
    implementation("com.google.cloud:google-cloud-storage:1.96.0")
    implementation("com.google.cloud.dataflow:google-cloud-dataflow-java-sdk-all:2.5.0")
    implementation("com.google.cloud:google-cloud-spanner:1.41.0")

    implementation 'com.beust:klaxon:5.0.1'

    runtime("org.slf4j:slf4j-jdk14:1.7.25")

    // Use the Kotlin test library.
    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    // Use the Kotlin JUnit integration.
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
}

application {
    // Define the main class for the application.
    mainClassName = 'blinq.BigQueryToStorage'
}

ext {
    PubSubToRowClass = "blinq.PubSubToRow"
    PubSubToStorageClass = "blinq.PubSubToStorage"
    WordCountClass = "blinq.WordCount"
    BigQueryToStorageClass = "blinq.BigQueryToStorage"
}

task pubSubToRow(type: JavaExec) {
    description = "Stream from Google PubSub to Bigquery row"
    classpath = sourceSets.main.runtimeClasspath
    main = PubSubToRowClass
}

task pubSubToStorage(type: JavaExec) {
    description = "Stream from Google PubSub to Storage"
    classpath = sourceSets.main.runtimeClasspath
    main = PubSubToStorageClass
}

task wordCount(type: JavaExec) {
    description = "Batch processing word count"
    classpath = sourceSets.main.runtimeClasspath
    main = WordCountClass
}

task bigQueryToStorage(type: JavaExec) {
    description = "Process BQ to Storage"
    classpath = sourceSets.main.runtimeClasspath
    main = BigQueryToStorageClass
}
